import rodados.*

describe "test de rodados" {
  //en vez de utilizar initialize, uso atributos comunes para todo el describe. Puedo definir objetos dentro del describe.
  const deportes = new Dependencia(empleados=45) //Para crear una DEPENDENCIA, entonces debo crear una nueva INSTANCIA del molde DEPENDENCIA.
                              //Si no lo defino ^ se va a crear con 0 empleados (xq ya lo inicialicé)
  const cultura = new Dependencia(empleados=31)
  const cachito = new Corsa(color="rojo") // Tenerlo como var es INNECESARIO. Coomo constante es mejor. xq siempre va a ser cachito, un corsa rojo.

  method initialize() {
    deportes.agregarAFlota(cachito)
    deportes.agregarAFlota(new Corsa(color="azul"))
    deportes.agregarAFlota(new Corsa(color="verde"))
    deportes.agregarAFlota(new Kwid(tieneTanqueAdicional=true))
    deportes.agregarAFlota(new Especial(capacidad=5,peso=1200,color="beige",velocidadMaxima=160))
    cultura.agregarAFlota(cachito)
    cultura.agregarAFlota(new Kwid(tieneTanqueAdicional=true))
    cultura.agregarAFlota(new Kwid(tieneTanqueAdicional=true))
    cultura.agregarAFlota(new Kwid(tieneTanqueAdicional=false))
    cultura.agregarAFlota(trafic)
    trafic.interior(popular)
    trafic.motor(bataton)
  }

    test "deportes tiene peso total 6450" {
    assert.equals(1300+1300+1300+1350+1200, deportes.pesoTotalFlota())
  }

    test "cultura tiene peso total 10700" {
      assert.equals(1300+1350+1350+1200+5500, cultura.pesoTotalFlota())
    }

    test "la flota de deportes esta  bien equipada" {
      // FEO HORRIBLE: assert.that(deportes.estaBienEquipada()==true) PARA ESO ESTÁ EL ASSERT.EQUALS!!!!!!!
      assert.that(deportes.estaBienEquipada())
    }
    test "la flota de cultura no está bien equipada" {
      assert.notThat(cultura.estaBienEquipada())
    }

    test "la capacidad total en color azul de deportes es 7" {
      assert.equals(7, deportes.capacidadTotalEnColor("azul"))
    }
}